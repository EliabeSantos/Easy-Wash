[{"/home/nosetrix/Projects/easy-wash/src/App.js":"1","/home/nosetrix/Projects/easy-wash/src/store/index.js":"2","/home/nosetrix/Projects/easy-wash/src/store/modules/cart/actionType.js":"3","/home/nosetrix/Projects/easy-wash/src/pages/checkoutServices/index.jsx":"4","/home/nosetrix/Projects/easy-wash/src/pages/login/style.js":"5","/home/nosetrix/Projects/easy-wash/src/components/sharedInput/index.jsx":"6","/home/nosetrix/Projects/easy-wash/src/components/serviceCard/index.jsx":"7","/home/nosetrix/Projects/easy-wash/src/components/header/style.js":"8","/home/nosetrix/Projects/easy-wash/src/store/modules/cart/actions.js":"9"},{"size":123,"mtime":1610659126460,"results":"10","hashOfConfig":"11"},{"size":314,"mtime":1610649733299,"results":"12","hashOfConfig":"11"},{"size":40,"mtime":1610649733299,"results":"13","hashOfConfig":"11"},{"size":1516,"mtime":1610664914803,"results":"14","hashOfConfig":"11"},{"size":878,"mtime":1610659243866,"results":"15","hashOfConfig":"11"},{"size":623,"mtime":1610659243810,"results":"16","hashOfConfig":"11"},{"size":2198,"mtime":1610664914803,"results":"17","hashOfConfig":"11"},{"size":626,"mtime":1610664914803,"results":"18","hashOfConfig":"11"},{"size":116,"mtime":1610649733299,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k086zl",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nosetrix/Projects/easy-wash/src/App.js",[],"/home/nosetrix/Projects/easy-wash/src/store/index.js",[],"/home/nosetrix/Projects/easy-wash/src/store/modules/cart/actionType.js",[],"/home/nosetrix/Projects/easy-wash/src/pages/checkoutServices/index.jsx",["38","39","40"],"/home/nosetrix/Projects/easy-wash/src/pages/login/style.js",[],"/home/nosetrix/Projects/easy-wash/src/components/sharedInput/index.jsx",[],"/home/nosetrix/Projects/easy-wash/src/components/serviceCard/index.jsx",["41","42"],"/home/nosetrix/Projects/easy-wash/src/components/header/style.js",[],"/home/nosetrix/Projects/easy-wash/src/store/modules/cart/actions.js",[],{"ruleId":"43","severity":1,"message":"44","line":10,"column":9,"nodeType":"45","messageId":"46","endLine":10,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":16,"column":28,"nodeType":"49","endLine":25,"endColumn":4},{"ruleId":"47","severity":1,"message":"50","line":27,"column":31,"nodeType":"51","endLine":27,"endColumn":33,"suggestions":"52"},{"ruleId":"43","severity":1,"message":"53","line":23,"column":10,"nodeType":"45","messageId":"46","endLine":23,"endColumn":22},{"ruleId":"43","severity":1,"message":"54","line":23,"column":24,"nodeType":"45","messageId":"46","endLine":23,"endColumn":39},"no-unused-vars","'cart' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["55"],"'serciveCount' is assigned a value but never used.","'setServiceCount' is assigned a value but never used.",{"desc":"56","fix":"57"},"Update the dependencies array to be: [id]",{"range":"58","text":"59"},[803,805],"[id]"]