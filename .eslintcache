[{"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/routes/index.jsx":"1","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/reportWebVitals.js":"2","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/laundries/reducer.js":"3","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/servicesList/index.jsx":"4","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/checkoutServices/style.js":"5","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/serviceCard/index.jsx":"6","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedButton/style.js":"7","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/actions.js":"8","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedButton/index.jsx":"9","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/App.js":"10","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/login/style.js":"11","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/header/index.jsx":"12","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedInput/style.js":"13","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/landing/index.jsx":"14","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/cartCard/index.jsx":"15","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/index.js":"16","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/context/openModal.js":"17","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/index.js":"18","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/reducer.js":"19","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/laundries/actionType.js":"20","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/actionType.js":"21","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/login/index.jsx":"22","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/checkoutServices/index.jsx":"23","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/register/index.jsx":"24","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/register/style.js":"25","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/landing/style.js":"26","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/servicesList/style.js":"27","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedInput/index.jsx":"28","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/header/style.js":"29","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/cartCard/style.js":"30","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/serviceCard/style.js":"31","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/thunk.js":"32"},{"size":1037,"mtime":1610991448453,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610396544822,"results":"35","hashOfConfig":"34"},{"size":248,"mtime":1610915461999,"results":"36","hashOfConfig":"34"},{"size":4625,"mtime":1610915461999,"results":"37","hashOfConfig":"34"},{"size":3716,"mtime":1610915461995,"results":"38","hashOfConfig":"34"},{"size":2198,"mtime":1610915461995,"results":"39","hashOfConfig":"34"},{"size":475,"mtime":1610626452119,"results":"40","hashOfConfig":"34"},{"size":116,"mtime":1610626452135,"results":"41","hashOfConfig":"34"},{"size":394,"mtime":1611073657162,"results":"42","hashOfConfig":"34"},{"size":124,"mtime":1610915461995,"results":"43","hashOfConfig":"34"},{"size":878,"mtime":1611082077531,"results":"44","hashOfConfig":"34"},{"size":2236,"mtime":1610915461995,"results":"45","hashOfConfig":"34"},{"size":347,"mtime":1610915461995,"results":"46","hashOfConfig":"34"},{"size":1211,"mtime":1610626452119,"results":"47","hashOfConfig":"34"},{"size":613,"mtime":1610915461995,"results":"48","hashOfConfig":"34"},{"size":769,"mtime":1610626452119,"results":"49","hashOfConfig":"34"},{"size":510,"mtime":1610626452119,"results":"50","hashOfConfig":"34"},{"size":409,"mtime":1610915461999,"results":"51","hashOfConfig":"34"},{"size":216,"mtime":1610626452135,"results":"52","hashOfConfig":"34"},{"size":44,"mtime":1610915461999,"results":"53","hashOfConfig":"34"},{"size":40,"mtime":1610626452135,"results":"54","hashOfConfig":"34"},{"size":2609,"mtime":1611076932768,"results":"55","hashOfConfig":"34"},{"size":2917,"mtime":1610915461995,"results":"56","hashOfConfig":"34"},{"size":10170,"mtime":1610915461999,"results":"57","hashOfConfig":"34"},{"size":1577,"mtime":1610915461999,"results":"58","hashOfConfig":"34"},{"size":1448,"mtime":1610915461995,"results":"59","hashOfConfig":"34"},{"size":5163,"mtime":1610915461999,"results":"60","hashOfConfig":"34"},{"size":960,"mtime":1611073154151,"results":"61","hashOfConfig":"34"},{"size":1495,"mtime":1610915461995,"results":"62","hashOfConfig":"34"},{"size":1114,"mtime":1610626452103,"results":"63","hashOfConfig":"34"},{"size":2312,"mtime":1610915461995,"results":"64","hashOfConfig":"34"},{"size":337,"mtime":1610626452135,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"u95bsl",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/routes/index.jsx",[],["136","137"],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/reportWebVitals.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/laundries/reducer.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/servicesList/index.jsx",["138","139","140","141","142"],"import MainIMage from \"./serviceImg.svg\";\nimport Header from \"../../components/header\";\nimport ServiceCard from \"../../components/serviceCard\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport DefaultButton from \"../../components/sharedButton\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  MainContainer,\n  ServiceImageContainer,\n  ServiceImage,\n  ServiceInfo,\n  Title,\n  Rate,\n  Description,\n  CartContainer,\n  CartItems,\n  AllContentContainer,\n  CartText,\n  FinalPrice,\n  DesckCartContainer,\n  DesckCartItems,\n  DesckServiceCard,\n  DesckServiceContainer,\n  CardContainer,\n} from \"./style\";\n\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport { BsStarFill } from \"react-icons/bs\";\n\nconst ServiceList = () => {\n  let { id } = useParams();\n  const [services, setServices] = useState([]);\n  const [user, setUser] = useState([]);\n  const axios = require(\"axios\");\n  const total = JSON.parse(localStorage.getItem(\"cart\"));\n  const history = useHistory();\n\n  const getServices = async () => {\n    try {\n      const res = await axios.get(\n        \"https://easy-wash-server.herokuapp.com/users\"\n      );\n      const data = await res.data;\n      const dataUser = data.filter((teste) => {\n        return teste.id === 3;\n      });\n      setServices(dataUser[0].services);\n      setUser(dataUser[0]);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    getServices();\n  }, [user]);\n  return (\n    <>\n      <Header style=\"height: 4vh\"></Header>\n      <AllContentContainer>\n        <MainContainer>\n          <ServiceImageContainer>\n            <ServiceImage src={MainIMage}></ServiceImage>\n          </ServiceImageContainer>\n          <ServiceInfo>\n            <Title>{user.company}</Title>\n            <Rate>\n              4,5 <BsStarFill color=\"yellow\" size=\"20px\" />\n            </Rate>\n            <Description>Pedido minimo de 10 itens</Description>\n          </ServiceInfo>\n          <CardContainer>\n            {services.map((services) => (\n              <ServiceCard\n                title={services.title}\n                price={services.price}\n                description={services.description}\n                service={services}\n              />\n            ))}\n            {services.map((services) => (\n              <ServiceCard\n                title={services.title}\n                price={services.price}\n                description={services.description}\n                service={services}\n              />\n            ))}\n          </CardContainer>\n        </MainContainer>\n        <CartContainer>\n          <CartItems>\n            <FaShoppingCart color=\"white\" size={\"20px\"}></FaShoppingCart>\n          </CartItems>\n          <CartItems>\n            <CartText onClick={() => history.push(\"/checkout\")}>\n              Ver Carrinho\n            </CartText>\n          </CartItems>\n          <CartItems>\n            <FinalPrice>\n              R${\" \"}\n              {total\n                ? Intl.NumberFormat(\"de-DE\", {\n                    style: \"currency\",\n                    currency: \"BRL\",\n                  }).format(total.total)\n                : \"00,00\"}\n            </FinalPrice>\n          </CartItems>\n          <DesckCartContainer>\n            <DesckCartItems>\n              <h1>Total</h1>\n            </DesckCartItems>\n            <DesckCartItems>\n              <h1>\n                {total\n                  ? Intl.NumberFormat(\"de-DE\", {\n                      style: \"currency\",\n                      currency: \"BRL\",\n                    }).format(total.total)\n                  : \"00,00\"}\n              </h1>\n            </DesckCartItems>\n            <DesckCartItems>\n              <DefaultButton\n                _func={() => {\n                  history.push(\"/checkout\");\n                }}\n                name={\"Ver Carrinho\"}\n              ></DefaultButton>\n            </DesckCartItems>\n          </DesckCartContainer>\n          <DesckServiceContainer>\n            {total ? (\n              total.products.map((services) => (\n                <DesckServiceCard>\n                  <p>{services.title}</p>\n                  <p>\n                    {Intl.NumberFormat(\"de-DE\", {\n                      style: \"currency\",\n                      currency: \"BRL\",\n                    }).format(services.price)}\n                  </p>\n                </DesckServiceCard>\n              ))\n            ) : (\n              <p>Sem Items no carrinho</p>\n            )}\n          </DesckServiceContainer>\n        </CartContainer>\n      </AllContentContainer>\n    </>\n  );\n};\n\nexport default ServiceList;\n","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/checkoutServices/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/serviceCard/index.jsx",["143","144"],"import {\n  MainContainer,\n  ImgContainer,\n  DefaultImg,\n  InfoContainer,\n  Title,\n  Description,\n  ButtonContainer,\n  PriceContainer,\n  ProductSelectContainer,\n  PriceText,\n  Quantify,\n} from \"./style\";\nimport DefaultButton from \"../sharedButton\";\nimport { useState } from \"react\";\nimport { BiPlus } from \"react-icons/bi\";\nimport { BiMinus } from \"react-icons/bi\";\nimport { addToCartThunk } from \"../../store/modules/cart/thunk\";\nimport { useDispatch } from \"react-redux\";\n\nconst ServiceCard = ({ title, description, price, service }) => {\n  const [value, setValue] = useState(1);\n  const [serciveCount, setServiceCount] = useState([]);\n  const realPrice = parseInt(price) * value;\n  const dispatch = useDispatch();\n  return (\n    <>\n      <MainContainer>\n        <ImgContainer>\n          <DefaultImg\n            src={\n              \"https://e7.pngegg.com/pngimages/44/475/png-clipart-laundry-liquid-clothing-clothing-clean-clothes-basket.png\"\n            }\n          />\n        </ImgContainer>\n        <InfoContainer>\n          <Title>{title}</Title>\n          <Description>{description}</Description>\n          <ButtonContainer>\n            <ProductSelectContainer>\n              <BiMinus\n                onClick={() => {\n                  if (value > 1) {\n                    setValue(value - 1);\n                  }\n                }}\n                size=\"1.5rem\"\n              />\n              <Quantify>{value}</Quantify>\n              <BiPlus\n                onClick={() => {\n                  setValue(value + 1);\n                }}\n                size=\"1.5rem\"\n              />\n            </ProductSelectContainer>\n            <PriceContainer>\n              <PriceText>R${value > 1 ? realPrice : price}</PriceText>\n              <DefaultButton\n                _func={() => {\n                  for (let i = 0; i < value; i++) {\n                    dispatch(addToCartThunk(service));\n                    setValue(1);\n                  }\n                }}\n                name={\"Adicionar\"}\n                width=\"50%\"\n              />\n            </PriceContainer>\n          </ButtonContainer>\n        </InfoContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nexport default ServiceCard;\n","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedButton/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/actions.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedButton/index.jsx",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/App.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/login/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/header/index.jsx",["145"],"import { Container } from \"./style\";\nimport {\n  Button,\n  Drawer,\n  List,\n  IconButton,\n  Divider,\n  ListItem,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport { FiChevronLeft } from \"react-icons/fi\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Header = () => {\n  const [open, setOpen] = useState(false);\n  const auth = localStorage.getItem(\"authToken\");\n  const history = useHistory();\n  const handleMenu = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container>\n      <div\n        className={`closeArea ${!open && \"noPointer\"}`}\n        onClick={() => {\n          open && setOpen(false);\n        }}\n      ></div>\n      <div className=\"menuContainer\">\n        <Button\n          aria-controls=\"header-menu\"\n          onClick={handleMenu}\n          color=\"default\"\n        >\n          <MenuIcon />\n        </Button>\n        <Drawer variant=\"persistent\" anchor=\"left\" open={open}>\n          <div className=\"drawerHeader\">\n            <IconButton onClick={() => setOpen(false)}>\n              <FiChevronLeft />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem\n              button\n              onClick={() =>\n                auth ? history.push(\"/profile\") : history.push(\"/login\")\n              }\n            >\n              {auth ? \"Perfil\" : \"Entrar\"}\n            </ListItem>\n            <ListItem button onClick={() => history.push(\"/register\")}>\n              {auth ? \"Novo Registro\" : \"Registre-se\"}\n            </ListItem>\n            <Divider />\n            <ListItem button onClick={() => history.push(\"/main-page\")}>\n              Lavanderias\n            </ListItem>\n            {auth && (\n              <ListItem button onClick={() => history.push(\"/checkout\")}>\n                Ver Carrinho\n              </ListItem>\n            )}\n          </List>\n        </Drawer>\n      </div>\n\n      <div className=\"imageContainer\">\n        <Link to=\"/\">\n          <img src={logo} alt=\"Logo\" />\n        </Link>\n      </div>\n    </Container>\n  );\n};\n\nexport default Header;\n","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedInput/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/landing/index.jsx",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/cartCard/index.jsx",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/index.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/context/openModal.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/index.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/reducer.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/laundries/actionType.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/actionType.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/login/index.jsx",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/checkoutServices/index.jsx",["146","147","148"],"import Header from \"../../components/header\";\nimport { Container } from \"./style\";\nimport map from \"./map.svg\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport CartCard from \"../../components/cartCard\";\nimport DefaultButton from \"../../components/sharedButton\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CheckoutServices = () => {\n  const history = useHistory();\n  const [addressInfo, setAddressInfo] = useState({});\n  const [paymentScreen, setPaymentScreen] = useState(false);\n  const cart = JSON.parse(localStorage.getItem(\"cart\"));\n  const token = localStorage.getItem(\"authToken\");\n  const decoded = jwt_decode(token);\n  const id = decoded.sub;\n  //   console.log(id);\n\n  const getDatasFromUser = async () => {\n    try {\n      const response = await axios.get(\n        `https://easy-wash-server.herokuapp.com/users/${id}`\n      );\n      setAddressInfo(response.data.address);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  console.log(cart);\n\n  useEffect(getDatasFromUser, []);\n\n  const { street, number, district, city, UF } = addressInfo;\n\n  return (\n    <Container>\n      <Header />\n      <div className=\"gridContainer\">\n        <div className=\"address\">\n          <div className=\"imgContainer\">\n            <img src={map} alt=\"Map\" />\n          </div>\n          <div className=\"addressInfo\">\n            <h3 className=\"infoTittle\">Endereço de coleta:</h3>\n            <p>\n              R. {street}, {number}\n            </p>\n            <p>\n              {district} - {city}, {UF}\n            </p>\n          </div>\n        </div>\n        <div className=\"productsContainer\">\n          <div className=\"productTitle\">Meus produtos</div>\n          <div className=\"productsList\">\n            {cart ? (\n              cart.products.map((product, index) => (\n                <CartCard\n                  key={index}\n                  title={product.title}\n                  value={product.price}\n                />\n              ))\n            ) : (\n              <div className=\"emptyCart\">\n                <span>Carrinho está vazio</span>\n                <DefaultButton name=\"Voltar\" _func={() => history.goBack()} />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"footer\">\n          <span className=\"total\">\n            <span>Total: </span>\n            <span>\n              {Intl.NumberFormat(\"pt-BR\", {\n                style: \"currency\",\n                currency: \"BRL\",\n              }).format(cart ? cart.total : 0)}\n            </span>\n          </span>\n          {cart && (\n            <DefaultButton\n              name=\"Finalizar Pagamento\"\n              width=\"15rem\"\n              height=\"3.5rem\"\n              _func={() => setPaymentScreen(true)}\n            />\n          )}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default CheckoutServices;\n","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/register/index.jsx",["149","150","151"],"import * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport CepCoords from \"coordenadas-do-cep\";\nimport axios from \"axios\";\nimport SharedInput from \"../../components/sharedInput\";\nimport SharedButton from \"../../components/sharedButton\";\n\nimport { Form, Container, Title, OuterContainer } from \"./style.js\";\n\nconst Register = ({ type }) => {\n  const [cep, setCep] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [uf, setUF] = useState(\"\");\n  const [coords, setCoords] = useState({});\n\n  const autoCompleteAddress = async () => {\n    if (cep.length === 8) {\n      try {\n        const data = await CepCoords.getByCep(cep);\n        setStreet(data.logradouro);\n        setDistrict(data.bairro);\n        setCity(data.localidade);\n        setUF(data.uf);\n        setCoords({ latitude: data.lat, longitude: data.lon });\n      } catch (err) {}\n    }\n  };\n\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\"Campo obrigatório\")\n      .min(6, \"Mínimo de 6 caractéres\"),\n    email: yup.string().required(\"Campo obrigatório\").email(\"Email inválido\"),\n    phone: yup\n      .string()\n      .required(\"Campo obrigatório\")\n      .typeError(\"Apenas números\"),\n    cpf: yup\n      .string()\n      .required(\"Campo obrigatório\")\n      .matches(\n        /^([0-9]{3}\\.?[0-9]{3}\\.?[0-9]{3}\\-?[0-9]{2}|[0-9]{2}\\.?[0-9]{3}\\.?[0-9]{3}\\/?[0-9]{4}\\-?[0-9]{2})$/,\n        \"Formato invalido\"\n      ),\n    password: yup.string().required(\"Campo obrigatório\"),\n    rePassword: yup\n      .string()\n      .required(\"Campo obrigatório\")\n      .oneOf([yup.ref(\"password\")], \"Senhas não compativeis\"),\n\n    zipcode: yup.string().length(8, \"Necessário 8 caracteres\"),\n    street: yup.string().required(\"Campo obrigatório\"),\n    number: yup\n      .number()\n      .required(\"Campo obrigatório\")\n      .typeError(\"Apenas números\")\n      .integer(\"Apenas números inteiros\"),\n    district: yup.string().required(\"Campo obrigatório\"),\n    city: yup.string().required(\"Campo obrigatório\"),\n    uf: yup\n      .string(\"Apenas letras\")\n      .required(\"Campo obrigatório\")\n      .length(2, \"Apenas dois caracteres\"),\n    radius: yup\n      .number()\n      .required(\"Campo obrigatório\")\n      .typeError(\"Apenas números\")\n      .integer(\"Apenas números inteiros\"),\n    deliveryfee: yup\n      .number()\n      .required(\"Campo obrigatório\")\n      .typeError(\"Apenas números\"),\n    initial: yup.string().required(\"Campo obrigatório\"),\n    end: yup.string().required(\"Campo obrigatório\"),\n  });\n\n  useEffect(() => {\n    autoCompleteAddress();\n  }, [cep]);\n\n  const handleSetCep = (evt) => {\n    setCep(evt.target.value);\n  };\n\n  const { register, errors, handleSubmit } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const handleFormSubmit = (data) => {\n    const formattedObject = {\n      email: data.email,\n      password: data.password,\n      company: data.name,\n      type: \"PJ\",\n      phone: data.phone,\n      address: {\n        zipcode: cep,\n        street: data.street,\n        number: data.number,\n        district: data.district,\n        city: data.city,\n        UF: data.info,\n        coords: coords,\n      },\n      radius: data.radius,\n      deliveryfee: data.deliveryfee,\n      schedule: {\n        initial: data.initial,\n        end: data.end,\n      },\n      services: [],\n    };\n    axios.post(\n      \"https://easy-wash-server.herokuapp.com/register\",\n      formattedObject\n    );\n  };\n\n  return (\n    <OuterContainer>\n      <Header />\n      <Container>\n        <Title>REGISTRO</Title>\n        <Form onSubmit={handleSubmit(handleFormSubmit)}>\n          <div className=\"container_personal_info\">\n            <h2 className=\"section_title\">Informações de conta</h2>\n\n            <SharedInput\n              label=\"Nome\"\n              name=\"name\"\n              _inputRef={register}\n              width=\"31rem\"\n              _helperText={errors.name?.message}\n              _error={!!errors.name}\n              _type=\"text\"\n            />\n            <SharedInput\n              label=\"Email\"\n              name=\"email\"\n              _inputRef={register}\n              width=\"31rem\"\n              _helperText={errors.email?.message}\n              _error={!!errors.email}\n              _type=\"email\"\n            />\n            <SharedInput\n              label=\"Telefone\"\n              name=\"phone\"\n              _inputRef={register}\n              width=\"31rem\"\n              _helperText={errors.phone?.message}\n              _error={!!errors.phone}\n              _type=\"string\"\n            />\n            <SharedInput\n              label={type === \"PJ\" ? \"CNPJ\" : \"CPF\"}\n              name=\"cpf\"\n              _inputRef={register}\n              width=\"31rem\"\n              _helperText={errors.cpf?.message}\n              _error={!!errors.cpf}\n              _type=\"text\"\n            />\n            <SharedInput\n              label=\"Senha\"\n              name=\"password\"\n              _inputRef={register}\n              width=\"31rem\"\n              _helperText={errors.password?.message}\n              _error={!!errors.password}\n              _type=\"password\"\n            />\n            <SharedInput\n              label=\"Repetir senha\"\n              name=\"rePassword\"\n              width=\"31rem\"\n              _inputRef={register}\n              _helperText={errors.rePassword?.message}\n              _error={!!errors.rePassword}\n              _type=\"password\"\n            />\n          </div>\n\n          <div className=\"container_address_info\">\n            <h2 className=\"section_title\">Informações de endereço</h2>\n            <SharedInput\n              label=\"CEP\"\n              name=\"zipcode\"\n              value={cep}\n              _onChange={(evt) => handleSetCep(evt)}\n              width=\"31rem\"\n              _helperText={errors.zipcode?.message}\n              _error={!!errors.zipcode}\n              _type=\"number\"\n              _maxLength=\"8\"\n            />\n            <div className=\"single_liner\">\n              <SharedInput\n                label=\"Rua\"\n                name=\"street\"\n                value={street}\n                _inputRef={register}\n                _onChange={(evt) => setStreet(evt.target.value)}\n                width=\"20rem\"\n                _helperText={errors.street?.message}\n                _error={!!errors.street}\n                _type=\"text\"\n              />\n\n              <SharedInput\n                label=\"Numero\"\n                name=\"number\"\n                type=\"number\"\n                _inputRef={register}\n                width=\"10rem\"\n                _helperText={errors.number?.message}\n                _error={!!errors.number}\n                _type=\"number\"\n                _min=\"0\"\n              />\n            </div>\n            <SharedInput\n              label=\"Bairro\"\n              name=\"district\"\n              _inputRef={register}\n              value={district}\n              _onChange={(evt) => setDistrict(evt.target.value)}\n              width=\"31rem\"\n              _helperText={errors.district?.message}\n              _error={!!errors.district}\n              _type=\"text\"\n            />\n            <div className=\"single_liner\">\n              <SharedInput\n                label=\"Cidade\"\n                name=\"city\"\n                _inputRef={register}\n                value={city}\n                _onChange={(evt) => setCity(evt.target.value)}\n                width=\"20rem\"\n                _helperText={errors.city?.message}\n                _error={!!errors.city}\n                _type=\"text\"\n              />\n              <SharedInput\n                label=\"UF\"\n                name=\"uf\"\n                _inputRef={register}\n                value={uf}\n                _onChange={(evt) => setUF(evt.target.value)}\n                width=\"10rem\"\n                _helperText={errors.uf?.message}\n                _error={!!errors.uf}\n                _type=\"text\"\n                _maxLength=\"2\"\n              />\n            </div>\n          </div>\n\n          <div className=\"container_service_info\">\n            <h2 className=\"section_title\">Informações de serviço</h2>\n            <div className=\"single_liner double_liner\">\n              <SharedInput\n                label=\"Area de serviço (KM)\"\n                name=\"radius\"\n                _inputRef={register}\n                width=\"15rem\"\n                _helperText={errors.radius?.message}\n                _error={!!errors.radius}\n                _type=\"number\"\n                _min=\"0\"\n              />\n              <SharedInput\n                label=\"Valor do frete\"\n                name=\"deliveryfee\"\n                _inputRef={register}\n                width=\"15rem\"\n                _helperText={errors.deliveryfee?.message}\n                _error={!!errors.deliveryfee}\n                _type=\"number\"\n                _min=\"0\"\n              />\n            </div>\n            <h3 className=\"section_subtitle\">Horario de atendimento</h3>\n            <div className=\"single_liner double_liner\">\n              <SharedInput\n                label=\"Inicio\"\n                name=\"initial\"\n                _inputRef={register}\n                width=\"15rem\"\n                _helperText={errors.initial?.message}\n                _error={!!errors.initial}\n                _type=\"time\"\n                _defaultValue=\"07:30\"\n              />\n              <SharedInput\n                label=\"Fim\"\n                name=\"end\"\n                _inputRef={register}\n                width=\"15rem\"\n                _helperText={errors.end?.message}\n                _error={!!errors.end}\n                _type=\"time\"\n                _defaultValue=\"18:30\"\n              />\n            </div>\n          </div>\n\n          <SharedButton\n            type=\"submit\"\n            name=\"Enviar\"\n            _inputRef={register}\n            width=\"15rem\"\n            height=\"3rem\"\n          />\n        </Form>\n      </Container>\n    </OuterContainer>\n  );\n};\nexport default Register;\n","/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/register/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/landing/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/pages/servicesList/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/sharedInput/index.jsx",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/header/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/cartCard/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/components/serviceCard/style.js",[],"/home/devs/Área de Trabalho/Projetocap/easy-wash/src/store/modules/cart/thunk.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":13},{"ruleId":"156","severity":1,"message":"160","line":6,"column":27,"nodeType":"158","messageId":"159","endLine":6,"endColumn":33},{"ruleId":"156","severity":1,"message":"161","line":34,"column":9,"nodeType":"158","messageId":"159","endLine":34,"endColumn":11},{"ruleId":"162","severity":1,"message":"163","line":56,"column":6,"nodeType":"164","endLine":56,"endColumn":12,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":59,"column":15,"nodeType":"168","endLine":59,"endColumn":34},{"ruleId":"156","severity":1,"message":"169","line":23,"column":10,"nodeType":"158","messageId":"159","endLine":23,"endColumn":22},{"ruleId":"156","severity":1,"message":"170","line":23,"column":24,"nodeType":"158","messageId":"159","endLine":23,"endColumn":39},{"ruleId":"156","severity":1,"message":"171","line":25,"column":9,"nodeType":"158","messageId":"159","endLine":25,"endColumn":20},{"ruleId":"156","severity":1,"message":"172","line":14,"column":10,"nodeType":"158","messageId":"159","endLine":14,"endColumn":23},{"ruleId":"162","severity":1,"message":"173","line":21,"column":28,"nodeType":"174","endLine":30,"endColumn":4},{"ruleId":"162","severity":1,"message":"175","line":34,"column":31,"nodeType":"164","endLine":34,"endColumn":33,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":48,"column":42,"nodeType":"179","messageId":"180","endLine":48,"endColumn":43,"suggestions":"181"},{"ruleId":"177","severity":1,"message":"178","line":48,"column":95,"nodeType":"179","messageId":"180","endLine":48,"endColumn":96,"suggestions":"182"},{"ruleId":"162","severity":1,"message":"183","line":85,"column":6,"nodeType":"164","endLine":85,"endColumn":11,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.","ArrayExpression",["187"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","'serciveCount' is assigned a value but never used.","'setServiceCount' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'paymentScreen' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["188"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["189","190"],["191","192"],"React Hook useEffect has a missing dependency: 'autoCompleteAddress'. Either include it or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"messageId":"198","fix":"199","desc":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"201","fix":"205","desc":"203"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [getServices, user]",{"range":"208","text":"209"},"Update the dependencies array to be: [id]",{"range":"210","text":"211"},"removeEscape",{"range":"212","text":"213"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"214","text":"215"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"216","text":"213"},{"range":"217","text":"215"},"Update the dependencies array to be: [autoCompleteAddress, cep]",{"range":"218","text":"219"},[1482,1488],"[getServices, user]",[1074,1076],"[id]",[1572,1573],"",[1572,1572],"\\",[1625,1626],[1625,1625],[2801,2806],"[autoCompleteAddress, cep]"]